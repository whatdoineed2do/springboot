plugins {
	id 'org.springframework.boot' version "3.5.0"
	id "com.palantir.docker" version "0.35.0"
	id 'application'
	id 'java'
	id "com.gorylenko.gradle-git-properties" version "2.5.0"
	id "com.diffplug.spotless" version "7.0.3"
}

group = 'com.example'
version = '0.0.1'
sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

repositories {
	mavenCentral()
}

ext {
	springbootVersion = '3.5.0'
	lombokVersion = '1.18.28'
	springopenapiVersion = '2.8.8'
	springcloudVersion = '4.3.0'
}

apply plugin: 'io.spring.dependency-management'
compileJava.finalizedBy 'spotlessApply'

dependencies {
	implementation "org.springframework.boot:spring-boot-starter-actuator"
	implementation "org.springframework.boot:spring-boot-starter-web"
	implementation "org.springframework.boot:spring-boot-starter-validation"
	implementation "org.springdoc:springdoc-openapi-starter-webmvc-ui:${springopenapiVersion}"
	implementation "org.springframework.cloud:spring-cloud-starter:${springcloudVersion}"

	// https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-gradle-plugin
	implementation "org.springframework.boot:spring-boot-gradle-plugin:${springbootVersion}"
	implementation "org.springframework.cloud:spring-cloud-starter-vault-config:${springcloudVersion}"

	implementation 'org.springframework.boot:spring-boot-starter-webflux'

	implementation 'io.micrometer:micrometer-registry-prometheus'

	implementation 'org.json:json:20250107'

	testImplementation "org.springframework.boot:spring-boot-starter-test"

	compileOnly "org.projectlombok:lombok:${lombokVersion}"
	annotationProcessor "org.projectlombok:lombok:${lombokVersion}"

	testCompileOnly "org.projectlombok:lombok:${lombokVersion}"
	testAnnotationProcessor "org.projectlombok:lombok:${lombokVersion}"
}

test {
	useJUnitPlatform()
}

springBoot {
  // http://localhost:8080/actuator/info incl build time info
  buildInfo()
}


// the default 'jar' task will create non-fat jar; use bootJar instead 
/*
jar {
	archiveFileName = "springboot-gradle.jar"
}
application {
    mainClassName = ''
}
*/

bootJar {
    archiveFileName = "${project.name}.jar"
    launchScript {
        properties "mode": "run"
    }
}

/* useful options:
  gradle bootRun --args="--server.port=8099 --spring.profiles.active=dev"
bootRun (
}
*/

docker {
	name "${project.name}:${project.version}"
	files '${project.name}.jar'
}

spotless {
   java {
      target fileTree('.') {
            include '**/*.java'
            exclude '**/build/**', '**/build-*/**', '**/bin/**'
      }
      /*
      toggleOffOn()
      googleJavaFormat().aosp().reorderImports(false)
      removeUnusedImports()
      trimTrailingWhitespace()
      */
      eclipse().configFile('spotless.eclipse.xml')
      trimTrailingWhitespace()
      endWithNewline()
   }
}
